{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","isValidImg","isValidImdb","abledButton","handleTextAreaChange","event","target","name","value","setState","handleInputChange","blurHandlerImg","test","blurHandlerImdb","blockButton","handleSubmit","preventDefault","newMovie","props","onAdd","this","onSubmit","type","placeholder","onChange","required","classNames","invalid","onBlur","disabled","onClick","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.029de6f3.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport classNames from 'classnames';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n  isValidImg: boolean,\n  isValidImdb: boolean,\n  abledButton: boolean\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isValidImg: true,\n    isValidImdb: true,\n    abledButton: true,\n  };\n\n  handleTextAreaChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const { name, value } = event.target;\n\n    this.setState((state) => ({\n      ...state,\n      [name]: value,\n    }));\n  };\n\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    this.setState((state) => ({\n      ...state,\n      [name]: value,\n    }));\n  };\n\n  blurHandlerImg = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    const regex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    if (value && !regex.test(value)) {\n      return this.setState((state) => ({\n        ...state,\n        isValidImg: false,\n      }));\n    }\n\n    return this.setState(state => ({\n      ...state,\n      isValidImg: true,\n      abledButton: true,\n    }));\n  };\n\n  blurHandlerImdb = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    const regex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    if (value && !regex.test(value)) {\n      return this.setState((state) => ({\n        ...state,\n        isValidImdb: false,\n      }));\n    }\n\n    return this.setState(state => ({\n      ...state,\n      isValidImdb: true,\n      abledButton: true,\n    }));\n  };\n\n  blockButton = () => {\n    if (!this.state.isValidImdb || !this.state.isValidImg) {\n      this.setState((state) => ({\n        ...state,\n        abledButton: false,\n      }));\n    }\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const newMovie = {\n      title: this.state.title,\n      description: this.state.description,\n      imgUrl: this.state.imgUrl,\n      imdbId: this.state.imdbId,\n      imdbUrl: this.state.imdbUrl,\n    };\n\n    this.props.onAdd(newMovie);\n    this.setState(state => ({\n      ...state,\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    }));\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imdbId,\n      imdbUrl,\n      imgUrl,\n      isValidImg,\n      isValidImdb,\n      abledButton,\n    } = this.state;\n\n    return (\n      <>\n        <h1 className=\"title\">Form of new Movie</h1>\n\n        <form onSubmit={this.handleSubmit} className=\"form\">\n          <input\n            type=\"text\"\n            name=\"title\"\n            className=\"input\"\n            placeholder=\"title\"\n            value={title}\n            onChange={this.handleInputChange}\n            required\n          />\n          <textarea\n            name=\"description\"\n            value={description}\n            className=\"input\"\n            placeholder=\"description\"\n            onChange={this.handleTextAreaChange}\n          />\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            className={classNames('input', { invalid: !isValidImg })}\n            value={imgUrl}\n            placeholder=\"imgUrl\"\n            onChange={this.handleInputChange}\n            onBlur={this.blurHandlerImg}\n            required\n          />\n\n          {!isValidImg && (\n            <span>Please type a valid url</span>\n          )}\n\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            className={classNames('input', { invalid: !isValidImdb })}\n            placeholder=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={this.handleInputChange}\n            onBlur={this.blurHandlerImdb}\n            required\n          />\n\n          {!isValidImdb && (\n            <span>Please type a valid url</span>\n          )}\n\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            placeholder=\"imdbId\"\n            className=\"input\"\n            value={imdbId}\n            onChange={this.handleInputChange}\n            required\n          />\n\n          <button\n            type=\"submit\"\n            className=\"button is-info\"\n            disabled={!abledButton}\n            onClick={this.blockButton}\n          >\n            Add\n          </button>\n        </form>\n      </>\n\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((state) => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}